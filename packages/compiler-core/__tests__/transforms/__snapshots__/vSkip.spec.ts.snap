// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`compiler: v-skip > transform > basic 1`] = `
"const _Vue = Vue

return function render(_ctx, _cache) {
  with (_ctx) {
    const { createCommentVNode: _createCommentVNode, openBlock: _openBlock, createElementBlock: _createElementBlock } = _Vue

    return (_ctx.ok)
      ? _createCommentVNode("v-skip", true)
      : (_openBlock(), _createElementBlock("div", { key: 1 }))
  }
}"
`;

exports[`compiler: v-skip > transform > nested v-skip 1`] = `
"const _Vue = Vue

return function render(_ctx, _cache) {
  with (_ctx) {
    const { createCommentVNode: _createCommentVNode, openBlock: _openBlock, createElementBlock: _createElementBlock, createElementVNode: _createElementVNode, Fragment: _Fragment } = _Vue

    return (_ctx.ok)
      ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [
          (_ctx.nested)
            ? _createCommentVNode("v-skip", true)
            : (_openBlock(), _createElementBlock("span", { key: 1 }))
        ], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))
      : (_openBlock(), _createElementBlock("div", { key: 1 }, [
          (_ctx.nested)
            ? _createCommentVNode("v-skip", true)
            : (_openBlock(), _createElementBlock("span", { key: 1 }))
        ]))
  }
}"
`;

exports[`compiler: v-skip > transform > on component 1`] = `
"const _Vue = Vue

return function render(_ctx, _cache) {
  with (_ctx) {
    const { resolveComponent: _resolveComponent, resolveSkipComponent: _resolveSkipComponent, openBlock: _openBlock, createBlock: _createBlock } = _Vue

    const _component_Comp = _resolveComponent("Comp")

    return (_openBlock(), _createBlock(_resolveSkipComponent(_ctx.ok, _component_Comp)))
  }
}"
`;

exports[`compiler: v-skip > transform > on dynamic component 1`] = `
"const _Vue = Vue

return function render(_ctx, _cache) {
  with (_ctx) {
    const { renderSlot: _renderSlot, resolveDynamicComponent: _resolveDynamicComponent, withCtx: _withCtx, openBlock: _openBlock, createBlock: _createBlock, resolveSkipComponent: _resolveSkipComponent } = _Vue

    return (_openBlock(), _createBlock(_resolveSkipComponent(_ctx.ok, _resolveDynamicComponent(_ctx.Comp)), null, {
      default: _withCtx(() => [
        _renderSlot(_ctx.$slots, "default")
      ]),
      _: 3 /* FORWARDED */
    }))
  }
}"
`;

exports[`compiler: v-skip > transform > v-else + v-skip 1`] = `
"const _Vue = Vue

return function render(_ctx, _cache) {
  with (_ctx) {
    const { openBlock: _openBlock, createElementBlock: _createElementBlock, createCommentVNode: _createCommentVNode, Fragment: _Fragment } = _Vue

    return (_ctx.ok)
      ? (_openBlock(), _createElementBlock("div", { key: 0 }))
      : (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [
          (_ctx.nested)
            ? _createCommentVNode("v-skip", true)
            : (_openBlock(), _createElementBlock("div", { key: 1 }))
        ], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))
  }
}"
`;

exports[`compiler: v-skip > transform > v-else-if + v-skip 1`] = `
"const _Vue = Vue

return function render(_ctx, _cache) {
  with (_ctx) {
    const { openBlock: _openBlock, createElementBlock: _createElementBlock, createCommentVNode: _createCommentVNode, Fragment: _Fragment } = _Vue

    return (_ctx.ok)
      ? (_openBlock(), _createElementBlock("div", { key: 0 }))
      : (_ctx.yes)
        ? (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [
            (_ctx.nested)
              ? _createCommentVNode("v-skip", true)
              : (_openBlock(), _createElementBlock("div", { key: 1 }))
          ], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))
        : _createCommentVNode("v-if", true)
  }
}"
`;

exports[`compiler: v-skip > transform > v-if + v-skip 1`] = `
"const _Vue = Vue

return function render(_ctx, _cache) {
  with (_ctx) {
    const { createCommentVNode: _createCommentVNode, openBlock: _openBlock, createElementBlock: _createElementBlock, Fragment: _Fragment } = _Vue

    return (_ctx.ok)
      ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [
          (_ctx.nested)
            ? _createCommentVNode("v-skip", true)
            : (_openBlock(), _createElementBlock("div", { key: 1 }))
        ], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))
      : _createCommentVNode("v-if", true)
  }
}"
`;

exports[`compiler: v-skip > transform > v-skip with key 1`] = `
"const _Vue = Vue

return function render(_ctx, _cache) {
  with (_ctx) {
    const { createCommentVNode: _createCommentVNode, openBlock: _openBlock, createElementBlock: _createElementBlock } = _Vue

    return (_ctx.nested)
      ? _createCommentVNode("v-skip", true)
      : (_openBlock(), _createElementBlock("div", { key: "foo" }))
  }
}"
`;

exports[`compiler: v-skip > transform > with component children 1`] = `
"const _Vue = Vue

return function render(_ctx, _cache) {
  with (_ctx) {
    const { resolveComponent: _resolveComponent, createVNode: _createVNode, openBlock: _openBlock, createBlock: _createBlock, createElementBlock: _createElementBlock } = _Vue

    const _component_Comp = _resolveComponent("Comp")

    return (_ctx.ok)
      ? (_openBlock(), _createBlock(_component_Comp, { key: 0 }))
      : (_openBlock(), _createElementBlock("div", { key: 1 }, [
          (_openBlock(), _createBlock(_component_Comp, { key: 0 }))
        ]))
  }
}"
`;

exports[`compiler: v-skip > transform > with element children 1`] = `
"const _Vue = Vue

return function render(_ctx, _cache) {
  with (_ctx) {
    const { createElementVNode: _createElementVNode, openBlock: _openBlock, createElementBlock: _createElementBlock } = _Vue

    return (_ctx.ok)
      ? (_openBlock(), _createElementBlock("span", { key: 0 }))
      : (_openBlock(), _createElementBlock("div", { key: 1 }, [
          (_openBlock(), _createElementBlock("span", { key: 0 }))
        ]))
  }
}"
`;

exports[`compiler: v-skip > transform > with multiple children 1`] = `
"const _Vue = Vue

return function render(_ctx, _cache) {
  with (_ctx) {
    const { createElementVNode: _createElementVNode, resolveComponent: _resolveComponent, createVNode: _createVNode, Fragment: _Fragment, openBlock: _openBlock, createElementBlock: _createElementBlock } = _Vue

    const _component_Comp = _resolveComponent("Comp")

    return (_ctx.ok)
      ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [
          _createElementVNode("span"),
          _createVNode(_component_Comp)
        ], 64 /* STABLE_FRAGMENT */))
      : (_openBlock(), _createElementBlock("div", { key: 1 }, [
          _createElementVNode("span"),
          _createVNode(_component_Comp)
        ]))
  }
}"
`;

exports[`compiler: v-skip > transform > with text children 1`] = `
"const _Vue = Vue

return function render(_ctx, _cache) {
  with (_ctx) {
    const { Fragment: _Fragment, openBlock: _openBlock, createElementBlock: _createElementBlock } = _Vue

    return (_ctx.ok)
      ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, ["foo"], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))
      : (_openBlock(), _createElementBlock("div", { key: 1 }, "foo"))
  }
}"
`;
